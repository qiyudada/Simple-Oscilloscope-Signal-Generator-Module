<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\GD32E230C8T6.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\GD32E230C8T6.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6070001: Last Updated: Fri Aug 30 16:00:09 2024
<BR><P>
<H3>Maximum Stack Usage =       1704 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; RunGame &rArr; computeBallMotion &rArr; segmentCross &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC_CMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC_CMP_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[e]">DMA_Channel0_IRQHandler</a> from adc.o(.text.DMA_Channel0_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[f]">DMA_Channel1_2_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[10]">DMA_Channel3_4_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from ec11.o(.text.EXTI4_15_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[9]">FMC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32e23x_it.o(.text.HardFault_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[20]">I2C0_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1a]">I2C0_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[21]">I2C1_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1b]">I2C1_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[7]">LVD_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32e23x_it.o(.text.NMI_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2d]">OnDMAInt</a> from oscilloscope.o(.text.OnDMAInt) referenced from oscilloscope.o(.text.InitOscillo)
 <LI><a href="#[2f]">OnDMAIntSpectro</a> from spectrometer.o(.text.OnDMAIntSpectro) referenced from spectrometer.o(.text.InitSpectro)
 <LI><a href="#[26]">OnEc11ClickBrick</a> from brick.o(.text.OnEc11ClickBrick) referenced from brick.o(.text.InitGame)
 <LI><a href="#[31]">OnEc11ClickMainMenu</a> from main.o(.text.OnEc11ClickMainMenu) referenced from main.o(.text.main)
 <LI><a href="#[29]">OnEc11ClickOscillo</a> from oscilloscope.o(.text.OnEc11ClickOscillo) referenced from oscilloscope.o(.text.InitOscillo)
 <LI><a href="#[25]">OnEc11RotateBrick</a> from brick.o(.text.OnEc11RotateBrick) referenced from brick.o(.text.InitGame)
 <LI><a href="#[30]">OnEc11RotateMainMenu</a> from main.o(.text.OnEc11RotateMainMenu) referenced from main.o(.text.main)
 <LI><a href="#[28]">OnEc11RotateOscillo</a> from oscilloscope.o(.text.OnEc11RotateOscillo) referenced from oscilloscope.o(.text.InitOscillo)
 <LI><a href="#[2e]">OnEc11RotateSpectroHandler</a> from spectrometer.o(.text.OnEc11RotateSpectroHandler) referenced from spectrometer.o(.text.InitSpectro)
 <LI><a href="#[2a]">OnKey1Click</a> from oscilloscope.o(.text.OnKey1Click) referenced from oscilloscope.o(.text.InitOscillo)
 <LI><a href="#[27]">OnKey1ClickBrick</a> from brick.o(.text.OnKey1ClickBrick) referenced from brick.o(.text.InitGame)
 <LI><a href="#[2b]">OnKey2Click</a> from oscilloscope.o(.text.OnKey2Click) referenced from oscilloscope.o(.text.InitOscillo)
 <LI><a href="#[2c]">OnKey3Click</a> from oscilloscope.o(.text.OnKey3Click) referenced from oscilloscope.o(.text.InitOscillo)
 <LI><a href="#[4]">PendSV_Handler</a> from gd32e23x_it.o(.text.PendSV_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[a]">RCU_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1c]">SPI0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from gd32e23x_it.o(.text.SVC_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from gd32e23x_it.o(.text.SysTick_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_gd32e23x.o(.text.SystemInit) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[12]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[13]">TIMER0_Channel_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[16]">TIMER13_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[17]">TIMER14_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[18]">TIMER15_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[19]">TIMER16_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[14]">TIMER2_IRQHandler</a> from freq.o(.text.TIMER2_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[15]">TIMER5_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1e]">USART0_IRQHandler</a> from usart.o(.text.USART0_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1f]">USART1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[6]">WWDGT_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[24]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[32]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[22]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[50]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[121]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[122]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[123]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[124]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[125]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnEc11RotateSpectroHandler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentCross
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveBallWithBar
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBarMotion
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cos_find
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentCross
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sin_find
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FFT
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cos_find
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentCross
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBarMotion
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FFT
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentCross
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
</UL>

<P><STRONG><a name="[e5]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_dcmple</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dcmple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentCross
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBarMotion
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_dcmpge</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dcmpge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentCross
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBarMotion
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dcmpgt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FFT
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[e6]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sin_find
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cos_find
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnEc11RotateSpectroHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnEc11RotateSpectroHandler
</UL>

<P><STRONG><a name="[126]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[127]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>

<P><STRONG><a name="[128]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[129]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[36]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[3f]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3e]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4d]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[4e]"></a>_drnd</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[12b]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[119]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[11d]"></a>__ARM_dcmp4</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, dcmp4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __ARM_dcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmin
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmax
</UL>

<P><STRONG><a name="[12c]"></a>_dcmp4</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, dcmp4.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[12d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[12e]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[52]"></a>ADC_DMA_Init</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, adc.o(.text.ADC_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ADC_DMA_Init &rArr; nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[76]"></a>ChangeSeat</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, fft.o(.text.ChangeSeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ChangeSeat
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
</UL>

<P><STRONG><a name="[5a]"></a>ClearAllBricks</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, brick.o(.text.ClearAllBricks))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ClearAllBricks &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
</UL>

<P><STRONG><a name="[5c]"></a>Close_LED</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, led.o(.text.Close_LED))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Close_LED &rArr; gpio_bit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[5e]"></a>Cos_find</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, fft.o(.text.Cos_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Cos_find &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
</UL>

<P><STRONG><a name="[e]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, adc.o(.text.DMA_Channel0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DMA_Channel0_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DrawBall</STRONG> (Thumb, 376 bytes, Stack size 104 bytes, brick.o(.text.DrawBall))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = DrawBall &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresDisplay
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInWin
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInLose
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
</UL>

<P><STRONG><a name="[64]"></a>DrawBar</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, brick.o(.text.DrawBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = DrawBar &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresDisplay
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInWin
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInLose
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
</UL>

<P><STRONG><a name="[66]"></a>DrawItem</STRONG> (Thumb, 300 bytes, Stack size 112 bytes, main.o(.text.DrawItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = DrawItem &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowString
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnEc11RotateMainMenu
</UL>

<P><STRONG><a name="[69]"></a>DrawLevelRtBricks</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, brick.o(.text.DrawLevelRtBricks))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = DrawLevelRtBricks &rArr; drawOneBrick &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOneBrick
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
</UL>

<P><STRONG><a name="[6b]"></a>DrawUI</STRONG> (Thumb, 800 bytes, Stack size 200 bytes, brick.o(.text.DrawUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowString
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInWin
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInRun
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInReady
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInPause
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInLose
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnKey1ClickBrick
</UL>

<P><STRONG><a name="[6c]"></a>DrawWall</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, brick.o(.text.DrawWall))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = DrawWall &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresDisplay
</UL>

<P><STRONG><a name="[6d]"></a>Draw_Curve</STRONG> (Thumb, 276 bytes, Stack size 56 bytes, tft.o(.text.Draw_Curve))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Draw_Curve &rArr; TFT_DrawLine &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 528 bytes, Stack size 32 bytes, ec11.o(.text.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EXTI4_15_IRQHandler &rArr; exti_init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>FFT</STRONG> (Thumb, 504 bytes, Stack size 168 bytes, fft.o(.text.FFT))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = FFT &rArr; Cos_find &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sin_find
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSeat
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cos_find
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
</UL>

<P><STRONG><a name="[e0]"></a>Get_ADC_Value</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, adc.o(.text.Get_ADC_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Get_ADC_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>InitData</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, brick.o(.text.InitData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = InitData &rArr; moveBallWithBar &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveBallWithBar
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[7b]"></a>InitGame</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, brick.o(.text.InitGame))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = InitGame &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_EC11_Rotate_Handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_EC11_Click_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_LED
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Key1_Click_Handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitData
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawWall
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLevelRtBricks
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>InitOscillo</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, oscilloscope.o(.text.InitOscillo))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = InitOscillo &rArr; TFT_StaticUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_EC11_Rotate_Handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_EC11_Click_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DMA_Int_Handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Key3_Click_Handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Key2_Click_Handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Key1_Click_Handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_StaticUI
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Oscilloscope
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>InitSpectro</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, spectrometer.o(.text.InitSpectro))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = InitSpectro &rArr; TFT_SpectroStaticUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_EC11_Rotate_Handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_DMA_Int_Handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SpectroStaticUI
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FFT
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>Init_ADC</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, adc.o(.text.Init_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Init_ADC &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_channel_config
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_source_config
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_config
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_mode_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[80]"></a>Init_EC11_EXITGPIO</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ec11.o(.text.Init_EC11_EXITGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init_EC11_EXITGPIO &rArr; nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_enable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[7f]"></a>Init_EC11_GPIO</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ec11.o(.text.Init_EC11_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init_EC11_GPIO &rArr; nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_enable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[94]"></a>Init_FFT</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, fft.o(.text.Init_FFT))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Init_FFT &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
</UL>

<P><STRONG><a name="[8d]"></a>Init_FreqTimer</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, freq.o(.text.Init_FreqTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Init_FreqTimer &rArr; timer_input_capture_config &rArr; timer_channel_input_capture_prescaler_config
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_input_capture_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_input_struct_para_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[81]"></a>Init_Key_GPIO</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, key.o(.text.Init_Key_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Init_Key_GPIO &rArr; nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[7d]"></a>Init_LED_GPIO</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, led.o(.text.Init_LED_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Init_LED_GPIO &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_LED
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[86]"></a>Init_Oscilloscope</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, oscilloscope.o(.text.Init_Oscilloscope))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Init_Oscilloscope
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[89]"></a>Init_PWM_Output</STRONG> (Thumb, 232 bytes, Stack size 88 bytes, timer.o(.text.Init_PWM_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Init_PWM_Output &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_primary_output_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_struct_para_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[bb]"></a>Init_SPI0_GPIO16</STRONG> (Thumb, 148 bytes, Stack size 64 bytes, tft_init.o(.text.Init_SPI0_GPIO16))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Init_SPI0_GPIO16 &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_struct_para_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[92]"></a>Init_Spector_ADC_Timer</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, adc.o(.text.Init_Spector_ADC_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Init_Spector_ADC_Timer &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_primary_output_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_struct_para_init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
</UL>

<P><STRONG><a name="[90]"></a>Init_Spectro_ADC</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, adc.o(.text.Init_Spectro_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init_Spectro_ADC &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_channel_config
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_source_config
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_config
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_mode_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
</UL>

<P><STRONG><a name="[91]"></a>Init_Spectro_ADC_DMA</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, adc.o(.text.Init_Spectro_ADC_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Init_Spectro_ADC_DMA &rArr; nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
</UL>

<P><STRONG><a name="[87]"></a>Init_USART</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, usart.o(.text.Init_USART))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Init_USART &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_word_length_set
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_stop_bit_set
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[c8]"></a>Key_Handle</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, oscilloscope.o(.text.Key_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = Key_Handle &rArr; TFT_ShowUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_channel_config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Output_PWMComparex
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Output_Freq
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
</UL>

<P><STRONG><a name="[79]"></a>LoadLevel</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, brick.o(.text.LoadLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LoadLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInWin
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitData
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>OnDMAInt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oscilloscope.o(.text.OnDMAInt))
<BR>[Address Reference Count : 1]<UL><LI> oscilloscope.o(.text.InitOscillo)
</UL>
<P><STRONG><a name="[2f]"></a>OnDMAIntSpectro</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, spectrometer.o(.text.OnDMAIntSpectro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OnDMAIntSpectro &rArr; timer_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spectrometer.o(.text.InitSpectro)
</UL>
<P><STRONG><a name="[26]"></a>OnEc11ClickBrick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, brick.o(.text.OnEc11ClickBrick))
<BR>[Address Reference Count : 1]<UL><LI> brick.o(.text.InitGame)
</UL>
<P><STRONG><a name="[31]"></a>OnEc11ClickMainMenu</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(.text.OnEc11ClickMainMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OnEc11ClickMainMenu &rArr; Open_LED &rArr; gpio_bit_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_LED
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[29]"></a>OnEc11ClickOscillo</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oscilloscope.o(.text.OnEc11ClickOscillo))
<BR>[Address Reference Count : 1]<UL><LI> oscilloscope.o(.text.InitOscillo)
</UL>
<P><STRONG><a name="[25]"></a>OnEc11RotateBrick</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, brick.o(.text.OnEc11RotateBrick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OnEc11RotateBrick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> brick.o(.text.InitGame)
</UL>
<P><STRONG><a name="[30]"></a>OnEc11RotateMainMenu</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(.text.OnEc11RotateMainMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = OnEc11RotateMainMenu &rArr; DrawItem &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawItem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[28]"></a>OnEc11RotateOscillo</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, oscilloscope.o(.text.OnEc11RotateOscillo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OnEc11RotateOscillo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oscilloscope.o(.text.InitOscillo)
</UL>
<P><STRONG><a name="[2e]"></a>OnEc11RotateSpectroHandler</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, spectrometer.o(.text.OnEc11RotateSpectroHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = OnEc11RotateSpectroHandler &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmin
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmax
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spectrometer.o(.text.InitSpectro)
</UL>
<P><STRONG><a name="[2a]"></a>OnKey1Click</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oscilloscope.o(.text.OnKey1Click))
<BR>[Address Reference Count : 1]<UL><LI> oscilloscope.o(.text.InitOscillo)
</UL>
<P><STRONG><a name="[27]"></a>OnKey1ClickBrick</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, brick.o(.text.OnKey1ClickBrick))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = OnKey1ClickBrick &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> brick.o(.text.InitGame)
</UL>
<P><STRONG><a name="[2b]"></a>OnKey2Click</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oscilloscope.o(.text.OnKey2Click))
<BR>[Address Reference Count : 1]<UL><LI> oscilloscope.o(.text.InitOscillo)
</UL>
<P><STRONG><a name="[2c]"></a>OnKey3Click</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oscilloscope.o(.text.OnKey3Click))
<BR>[Address Reference Count : 1]<UL><LI> oscilloscope.o(.text.InitOscillo)
</UL>
<P><STRONG><a name="[ce]"></a>Open_LED</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, led.o(.text.Open_LED))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Open_LED &rArr; gpio_bit_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnEc11ClickMainMenu
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>RunGame</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, brick.o(.text.RunGame))
<BR><BR>[Stack]<UL><LI>Max Depth = 1672<LI>Call Chain = RunGame &rArr; computeBallMotion &rArr; segmentCross &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresDisplay
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveBallWithBar
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInWin
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInRun
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInReady
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInPause
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInLose
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameResetKey
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBarMotion
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>RunOscillo</STRONG> (Thumb, 608 bytes, Stack size 56 bytes, oscilloscope.o(.text.RunOscillo))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = RunOscillo &rArr; Key_Handle &rArr; TFT_ShowUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Curve
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_Value
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>RunSpectro</STRONG> (Thumb, 844 bytes, Stack size 232 bytes, spectrometer.o(.text.RunSpectro))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = RunSpectro &rArr; FFT &rArr; Cos_find &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_Value
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cos_find
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>Set_DMA_Int_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, adc.o(.text.Set_DMA_Int_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_DMA_Int_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[83]"></a>Set_EC11_Click_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ec11.o(.text.Set_EC11_Click_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_EC11_Click_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[82]"></a>Set_EC11_Rotate_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ec11.o(.text.Set_EC11_Rotate_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_EC11_Rotate_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[84]"></a>Set_Key1_Click_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ec11.o(.text.Set_Key1_Click_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Key1_Click_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[8a]"></a>Set_Key2_Click_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ec11.o(.text.Set_Key2_Click_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Key2_Click_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[8b]"></a>Set_Key3_Click_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ec11.o(.text.Set_Key3_Click_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Key3_Click_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[cc]"></a>Set_Output_Freq</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, timer.o(.text.Set_Output_Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Set_Output_Freq &rArr; timer_autoreload_value_config
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_autoreload_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[cb]"></a>Set_Output_PWMComparex</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, timer.o(.text.Set_Output_PWMComparex))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Set_Output_PWMComparex &rArr; timer_channel_output_pulse_value_config
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[77]"></a>Sin_find</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, fft.o(.text.Sin_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Sin_find &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, system_gd32e23x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemInit &rArr; nvic_vector_table_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>TFT_Address_Set16</STRONG> (Thumb, 300 bytes, Stack size 64 bytes, tft_init.o(.text.TFT_Address_Set16))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG16
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese24x24
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese16x16
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese12x12
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChar
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
</UL>

<P><STRONG><a name="[6f]"></a>TFT_DrawLine</STRONG> (Thumb, 338 bytes, Stack size 112 bytes, tft.o(.text.TFT_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TFT_DrawLine &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Curve
</UL>

<P><STRONG><a name="[6e]"></a>TFT_DrawPoint</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, tft.o(.text.TFT_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese24x24
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese16x16
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese12x12
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChar
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawLine
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Curve
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_StaticUI
</UL>

<P><STRONG><a name="[5b]"></a>TFT_Fill</STRONG> (Thumb, 174 bytes, Stack size 88 bytes, tft.o(.text.TFT_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawItem
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOneBrick
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearOneBrick
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawWall
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllBricks
</UL>

<P><STRONG><a name="[7e]"></a>TFT_Init</STRONG> (Thumb, 616 bytes, Stack size 80 bytes, tft_init.o(.text.TFT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TFT_Init &rArr; Init_SPI0_GPIO16 &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA8
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_GPIO_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[f6]"></a>TFT_ShowChar</STRONG> (Thumb, 532 bytes, Stack size 144 bytes, tft.o(.text.TFT_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowString
</UL>

<P><STRONG><a name="[f7]"></a>TFT_ShowChinese</STRONG> (Thumb, 254 bytes, Stack size 88 bytes, tft.o(.text.TFT_ShowChinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = TFT_ShowChinese &rArr; TFT_ShowChinese24x24 &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese24x24
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese16x16
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese12x12
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_StaticUI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
</UL>

<P><STRONG><a name="[f8]"></a>TFT_ShowChinese12x12</STRONG> (Thumb, 536 bytes, Stack size 144 bytes, tft.o(.text.TFT_ShowChinese12x12))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = TFT_ShowChinese12x12 &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese
</UL>

<P><STRONG><a name="[f9]"></a>TFT_ShowChinese16x16</STRONG> (Thumb, 536 bytes, Stack size 144 bytes, tft.o(.text.TFT_ShowChinese16x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = TFT_ShowChinese16x16 &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese
</UL>

<P><STRONG><a name="[fa]"></a>TFT_ShowChinese24x24</STRONG> (Thumb, 536 bytes, Stack size 144 bytes, tft.o(.text.TFT_ShowChinese24x24))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = TFT_ShowChinese24x24 &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese
</UL>

<P><STRONG><a name="[68]"></a>TFT_ShowString</STRONG> (Thumb, 160 bytes, Stack size 112 bytes, tft.o(.text.TFT_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawItem
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SpectroStaticUI
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_StaticUI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
</UL>

<P><STRONG><a name="[cd]"></a>TFT_ShowUI</STRONG> (Thumb, 724 bytes, Stack size 184 bytes, oscilloscope.o(.text.TFT_ShowUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = TFT_ShowUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowString
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[93]"></a>TFT_SpectroStaticUI</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, spectrometer.o(.text.TFT_SpectroStaticUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = TFT_SpectroStaticUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowString
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
</UL>

<P><STRONG><a name="[8e]"></a>TFT_StaticUI</STRONG> (Thumb, 840 bytes, Stack size 160 bytes, oscilloscope.o(.text.TFT_StaticUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = TFT_StaticUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowString
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
</UL>

<P><STRONG><a name="[f2]"></a>TFT_WR_DATA16</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, tft_init.o(.text.TFT_WR_DATA16))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TFT_WR_DATA16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write16
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese24x24
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese16x16
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChinese12x12
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowChar
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawPoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>

<P><STRONG><a name="[f5]"></a>TFT_WR_DATA8</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, tft_init.o(.text.TFT_WR_DATA8))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TFT_WR_DATA8 &rArr; SPI0_Write &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[f4]"></a>TFT_WR_REG</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, tft_init.o(.text.TFT_WR_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TFT_WR_REG &rArr; SPI0_Write &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[f1]"></a>TFT_WR_REG16</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, tft_init.o(.text.TFT_WR_REG16))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write16
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Address_Set16
</UL>

<P><STRONG><a name="[14]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, freq.o(.text.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIMER2_IRQHandler &rArr; timer_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_capture_value_register_read
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART0_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, usart.o(.text.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USART0_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[100]"></a>UpdateBreakBricks</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, brick.o(.text.UpdateBreakBricks))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = UpdateBreakBricks &rArr; clearOneBrick &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearOneBrick
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresDisplay
</UL>

<P><STRONG><a name="[9e]"></a>adc_calibration_enable</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_calibration_enable))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[99]"></a>adc_channel_length_config</STRONG> (Thumb, 116 bytes, Stack size 28 bytes, gd32e23x_adc.o(.text.adc_channel_length_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = adc_channel_length_config
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[98]"></a>adc_data_alignment_config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gd32e23x_adc.o(.text.adc_data_alignment_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_data_alignment_config
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[9f]"></a>adc_dma_mode_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_dma_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[9d]"></a>adc_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[9c]"></a>adc_external_trigger_config</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, gd32e23x_adc.o(.text.adc_external_trigger_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adc_external_trigger_config
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[9b]"></a>adc_external_trigger_source_config</STRONG> (Thumb, 92 bytes, Stack size 28 bytes, gd32e23x_adc.o(.text.adc_external_trigger_source_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = adc_external_trigger_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[9a]"></a>adc_regular_channel_config</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, gd32e23x_adc.o(.text.adc_regular_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = adc_regular_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[a0]"></a>adc_software_trigger_enable</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gd32e23x_adc.o(.text.adc_software_trigger_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_software_trigger_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[97]"></a>adc_special_function_config</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, gd32e23x_adc.o(.text.adc_special_function_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_special_function_config
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[101]"></a>clearOneBrick</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, brick.o(.text.clearOneBrick))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = clearOneBrick &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBreakBricks
</UL>

<P><STRONG><a name="[d7]"></a>computeBallMotion</STRONG> (Thumb, 4036 bytes, Stack size 1096 bytes, brick.o(.text.computeBallMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608<LI>Call Chain = computeBallMotion &rArr; segmentCross &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;segmentCross
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[d5]"></a>computeBarMotion</STRONG> (Thumb, 268 bytes, Stack size 80 bytes, brick.o(.text.computeBarMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = computeBarMotion &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[74]"></a>delay_1ms</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, systick.o(.text.delay_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = delay_1ms &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[60]"></a>dma_channel_disable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gd32e23x_dma.o(.text.dma_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel0_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>dma_channel_enable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gd32e23x_dma.o(.text.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>dma_circulation_enable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gd32e23x_dma.o(.text.dma_circulation_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_circulation_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
</UL>

<P><STRONG><a name="[55]"></a>dma_deinit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gd32e23x_dma.o(.text.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dma_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
</UL>

<P><STRONG><a name="[56]"></a>dma_init</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, gd32e23x_dma.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
</UL>

<P><STRONG><a name="[59]"></a>dma_interrupt_enable</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gd32e23x_dma.o(.text.dma_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dma_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
</UL>

<P><STRONG><a name="[61]"></a>dma_interrupt_flag_clear</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gd32e23x_dma.o(.text.dma_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dma_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel0_IRQHandler
</UL>

<P><STRONG><a name="[5f]"></a>dma_interrupt_flag_get</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, gd32e23x_dma.o(.text.dma_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dma_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel0_IRQHandler
</UL>

<P><STRONG><a name="[e3]"></a>dma_transfer_number_config</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gd32e23x_dma.o(.text.dma_transfer_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dma_transfer_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[ff]"></a>dma_transfer_number_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gd32e23x_dma.o(.text.dma_transfer_number_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_transfer_number_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>drawOneBrick</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, brick.o(.text.drawOneBrick))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = drawOneBrick &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLevelRtBricks
</UL>

<P><STRONG><a name="[73]"></a>exti_init</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, gd32e23x_exti.o(.text.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>exti_interrupt_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gd32e23x_exti.o(.text.exti_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exti_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
</UL>

<P><STRONG><a name="[71]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gd32e23x_exti.o(.text.exti_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exti_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>exti_interrupt_flag_get</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, gd32e23x_exti.o(.text.exti_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = exti_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>gameResetKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, brick.o(.text.gameResetKey))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[a5]"></a>gpio_af_set</STRONG> (Thumb, 210 bytes, Stack size 52 bytes, gd32e23x_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[d2]"></a>gpio_bit_reset</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gd32e23x_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_LED
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG16
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA8
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
</UL>

<P><STRONG><a name="[5d]"></a>gpio_bit_set</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gd32e23x_gpio.o(.text.gpio_bit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_LED
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG16
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA8
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_GPIO_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
</UL>

<P><STRONG><a name="[72]"></a>gpio_input_bit_get</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, gd32e23x_gpio.o(.text.gpio_input_bit_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[96]"></a>gpio_mode_set</STRONG> (Thumb, 162 bytes, Stack size 64 bytes, gd32e23x_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_GPIO_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[a4]"></a>gpio_output_options_set</STRONG> (Thumb, 156 bytes, Stack size 60 bytes, gd32e23x_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_GPIO_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[da]"></a>handleKeyInClear</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, brick.o(.text.handleKeyInClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = handleKeyInClear &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveBallWithBar
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLevel
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLevelRtBricks
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllBricks
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[dc]"></a>handleKeyInFail</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, brick.o(.text.handleKeyInFail))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = handleKeyInFail &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveBallWithBar
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLevel
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLevelRtBricks
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllBricks
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[db]"></a>handleKeyInLose</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, brick.o(.text.handleKeyInLose))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = handleKeyInLose &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveBallWithBar
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[d9]"></a>handleKeyInPause</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, brick.o(.text.handleKeyInPause))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = handleKeyInPause &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[d4]"></a>handleKeyInReady</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, brick.o(.text.handleKeyInReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = handleKeyInReady &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[d6]"></a>handleKeyInRun</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, brick.o(.text.handleKeyInRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = handleKeyInRun &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[dd]"></a>handleKeyInWin</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, brick.o(.text.handleKeyInWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = handleKeyInWin &rArr; DrawUI &rArr; TFT_ShowString &rArr; TFT_ShowChar &rArr; TFT_DrawPoint &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveBallWithBar
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLevel
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[22]"></a>main</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1704<LI>Call Chain = main &rArr; RunGame &rArr; computeBallMotion &rArr; segmentCross &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Fill
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_EC11_Rotate_Handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_EC11_Click_Handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunOscillo
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawItem
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Close_LED
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7a]"></a>moveBallWithBar</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, brick.o(.text.moveBallWithBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = moveBallWithBar &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInWin
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInLose
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInFail
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleKeyInClear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitData
</UL>

<P><STRONG><a name="[54]"></a>nvic_irq_enable</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gd32e23x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
</UL>

<P><STRONG><a name="[ef]"></a>nvic_vector_table_set</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gd32e23x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[95]"></a>rcu_adc_clock_config</STRONG> (Thumb, 400 bytes, Stack size 20 bytes, gd32e23x_rcu.o(.text.rcu_adc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rcu_adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
</UL>

<P><STRONG><a name="[10b]"></a>rcu_clock_freq_get</STRONG> (Thumb, 764 bytes, Stack size 84 bytes, gd32e23x_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[53]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gd32e23x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LED_GPIO
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_GPIO_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC_DMA
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spectro_ADC
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ADC
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[107]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[106]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[d8]"></a>refresDisplay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, brick.o(.text.refresDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = refresDisplay &rArr; DrawBall &rArr; TFT_Fill &rArr; TFT_Address_Set16 &rArr; TFT_WR_REG16 &rArr; SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBreakBricks
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawWall
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunGame
</UL>

<P><STRONG><a name="[102]"></a>segmentCross</STRONG> (Thumb, 1326 bytes, Stack size 384 bytes, brick.o(.text.segmentCross))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = segmentCross &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
</UL>

<P><STRONG><a name="[ba]"></a>spi_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gd32e23x_spi.o(.text.spi_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
</UL>

<P><STRONG><a name="[eb]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gd32e23x_spi.o(.text.spi_i2s_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write16
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write
</UL>

<P><STRONG><a name="[b7]"></a>spi_i2s_deinit</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gd32e23x_spi.o(.text.spi_i2s_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spi_i2s_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
</UL>

<P><STRONG><a name="[ea]"></a>spi_i2s_flag_get</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, gd32e23x_spi.o(.text.spi_i2s_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi_i2s_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write16
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Write
</UL>

<P><STRONG><a name="[b9]"></a>spi_init</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, gd32e23x_spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
</UL>

<P><STRONG><a name="[b8]"></a>spi_struct_para_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gd32e23x_spi.o(.text.spi_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO16
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI0_GPIO
</UL>

<P><STRONG><a name="[a1]"></a>syscfg_exti_line_config</STRONG> (Thumb, 188 bytes, Stack size 44 bytes, gd32e23x_syscfg.o(.text.syscfg_exti_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_GPIO
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_EC11_EXITGPIO
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Key_GPIO
</UL>

<P><STRONG><a name="[109]"></a>systick_clksource_set</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gd32e23x_misc.o(.text.systick_clksource_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systick_clksource_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[7c]"></a>systick_config</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, systick.o(.text.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = systick_config &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clksource_set
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSpectro
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOscillo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGame
</UL>

<P><STRONG><a name="[ab]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_auto_reload_shadow_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[ed]"></a>timer_autoreload_value_config</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gd32e23x_timer.o(.text.timer_autoreload_value_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_autoreload_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Output_Freq
</UL>

<P><STRONG><a name="[fc]"></a>timer_channel_capture_value_register_read</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gd32e23x_timer.o(.text.timer_channel_capture_value_register_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_channel_capture_value_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[10a]"></a>timer_channel_input_capture_prescaler_config</STRONG> (Thumb, 170 bytes, Stack size 44 bytes, gd32e23x_timer.o(.text.timer_channel_input_capture_prescaler_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = timer_channel_input_capture_prescaler_config
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_input_capture_config
</UL>

<P><STRONG><a name="[a9]"></a>timer_channel_input_struct_para_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_channel_input_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_channel_input_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
</UL>

<P><STRONG><a name="[b0]"></a>timer_channel_output_config</STRONG> (Thumb, 768 bytes, Stack size 44 bytes, gd32e23x_timer.o(.text.timer_channel_output_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = timer_channel_output_config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[b2]"></a>timer_channel_output_mode_config</STRONG> (Thumb, 170 bytes, Stack size 44 bytes, gd32e23x_timer.o(.text.timer_channel_output_mode_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = timer_channel_output_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[b1]"></a>timer_channel_output_pulse_value_config</STRONG> (Thumb, 98 bytes, Stack size 44 bytes, gd32e23x_timer.o(.text.timer_channel_output_pulse_value_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = timer_channel_output_pulse_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Output_PWMComparex
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[b3]"></a>timer_channel_output_shadow_config</STRONG> (Thumb, 170 bytes, Stack size 44 bytes, gd32e23x_timer.o(.text.timer_channel_output_shadow_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = timer_channel_output_shadow_config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[af]"></a>timer_channel_output_struct_para_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_channel_output_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_channel_output_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[a6]"></a>timer_deinit</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, gd32e23x_timer.o(.text.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[b5]"></a>timer_disable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnDMAIntSpectro
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[ae]"></a>timer_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[a8]"></a>timer_init</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, gd32e23x_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[aa]"></a>timer_input_capture_config</STRONG> (Thumb, 458 bytes, Stack size 48 bytes, gd32e23x_timer.o(.text.timer_input_capture_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = timer_input_capture_config &rArr; timer_channel_input_capture_prescaler_config
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_input_capture_prescaler_config
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
</UL>

<P><STRONG><a name="[ad]"></a>timer_interrupt_enable</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, gd32e23x_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
</UL>

<P><STRONG><a name="[ac]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gd32e23x_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
</UL>

<P><STRONG><a name="[fb]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gd32e23x_timer.o(.text.timer_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>timer_primary_output_config</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gd32e23x_timer.o(.text.timer_primary_output_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_primary_output_config
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[a7]"></a>timer_struct_para_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWM_Output
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FreqTimer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Spector_ADC_Timer
</UL>

<P><STRONG><a name="[c0]"></a>usart_baudrate_set</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, gd32e23x_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[bc]"></a>usart_deinit</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gd32e23x_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usart_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[c3]"></a>usart_dma_receive_config</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gd32e23x_usart.o(.text.usart_dma_receive_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_dma_receive_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[c4]"></a>usart_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gd32e23x_usart.o(.text.usart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[c6]"></a>usart_flag_clear</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gd32e23x_usart.o(.text.usart_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[c5]"></a>usart_flag_get</STRONG> (Thumb, 66 bytes, Stack size 28 bytes, gd32e23x_usart.o(.text.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[c7]"></a>usart_interrupt_enable</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gd32e23x_usart.o(.text.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[fe]"></a>usart_interrupt_flag_clear</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gd32e23x_usart.o(.text.usart_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[fd]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 116 bytes, Stack size 44 bytes, gd32e23x_usart.o(.text.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>usart_parity_config</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gd32e23x_usart.o(.text.usart_parity_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_parity_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[c1]"></a>usart_receive_config</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gd32e23x_usart.o(.text.usart_receive_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_receive_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[be]"></a>usart_stop_bit_set</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gd32e23x_usart.o(.text.usart_stop_bit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_stop_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[c2]"></a>usart_transmit_config</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gd32e23x_usart.o(.text.usart_transmit_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_transmit_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[bd]"></a>usart_word_length_set</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gd32e23x_usart.o(.text.usart_word_length_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_word_length_set
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_USART
</UL>

<P><STRONG><a name="[10c]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[12f]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[130]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[131]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[67]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawItem
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SpectroStaticUI
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_StaticUI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ShowUI
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUI
</UL>

<P><STRONG><a name="[4c]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[10f]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rred.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[114]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[10e]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 838 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[111]"></a>__kernel_cos</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[112]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[113]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[116]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[117]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[115]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[132]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[133]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[134]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[11f]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[d0]"></a>fmax</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, fmax.o(i.fmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fmax &rArr; __ARM_dcmp4
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_dcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnEc11RotateSpectroHandler
</UL>

<P><STRONG><a name="[d1]"></a>fmin</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, fmin.o(i.fmin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fmin &rArr; __ARM_dcmp4
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_dcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnEc11RotateSpectroHandler
</UL>

<P><STRONG><a name="[63]"></a>round</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, round.o(i.round))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = round &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computeBallMotion
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBall
</UL>

<P><STRONG><a name="[a3]"></a>sin</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_FFT
</UL>

<P><STRONG><a name="[e8]"></a>sqrt</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunSpectro
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[105]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gd32e23x_misc.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[104]"></a>__NVIC_SetPriority</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gd32e23x_misc.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[108]"></a>system_clock_72m_hxtal</STRONG> (Thumb, 232 bytes, Stack size 12 bytes, system_gd32e23x.o(.text.system_clock_72m_hxtal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = system_clock_72m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[ee]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32e23x.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = system_clock_config &rArr; system_clock_72m_hxtal
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_72m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[b6]"></a>Init_SPI0_GPIO</STRONG> (Thumb, 148 bytes, Stack size 64 bytes, tft_init.o(.text.Init_SPI0_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Init_SPI0_GPIO &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_struct_para_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[e9]"></a>SPI0_Write</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tft_init.o(.text.SPI0_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI0_Write &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA8
</UL>

<P><STRONG><a name="[ec]"></a>SPI0_Write16</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tft_init.o(.text.SPI0_Write16))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI0_Write16 &rArr; spi_i2s_data_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_REG16
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WR_DATA16
</UL>

<P><STRONG><a name="[f3]"></a>TFT_GPIO_Init</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, tft_init.o(.text.TFT_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TFT_GPIO_Init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[118]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10d]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[11b]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[11a]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[32]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
